import           Data.Char (digitToInt, isDigit)

-- import           System.Random (randoms, mkStdGen)

import           System.Random.MWC

import           Control.Monad.ST

import qualified Data.Vector as V

import           Data.Word (Word32)

import           Data.Ratio ((%),numerator,denominator)

import           Data.List (sort, sortBy, sortOn, findIndices, elemIndex, groupBy, transpose)

import           Data.Maybe (isJust, fromJust, fromMaybe, mapMaybe)

import qualified Data.Text as T

import qualified Data.Map.Strict as Map

import           Data.Bool (bool)

import           Sound.Tidal.Bjorklund (bjorklund)

import           Sound.Tidal.Core

import qualified Sound.Tidal.Params as P

import           Sound.Tidal.Pattern

import           Sound.Tidal.Utils

ur t outer_p ps fs = _slow t $ unwrap $ adjust <$> timedValues (getPat . split <$> outer_p)
  where split = wordsBy (==':')
        getPat (s:xs) = (match s, transform xs)
        -- TODO - check this really can't happen..
        getPat _ = error "can't happen?"
        match s = fromMaybe silence $ lookup s ps'
        ps' = map (fmap (_fast t)) ps
        adjust (a, (p, f)) = f a p
        transform (x:_) a = transform' x a
        transform _ _ = id
        transform' str (Arc s e) p = s `rotR` inside (pure $ 1/(e-s)) (matchF str) p
        matchF str = fromMaybe id $ lookup str fs
        timedValues = withEvent (\(Event a a' v) -> Event a a' (a,v))
