setcps (128/60/2)

do {
  hush;
  once $ midicmd "stop" # s "midi";
}

d3 $ silence

d1 $ silence

let melody =
      off 0.25 (slow 8 . (+ (-6)) )
      $ off 0.125 (slow 4.rev.(+2))
      $ fast 2
      $ cat [
        "[8 .  0(1,8,4) [10 9] ] [[2 [3 0]]] ",
        "[8 .  0(1,8,4) [10 9] ] [[2 1]] " - 3,
        "[8 7 6 [10 9] ] [[8 7]] " +1,
        " [4 [0 -1]] [5 7]"
      ]
in
do {
  p "clock" $ midicmd "midiClock*48" # s "midi"
  ;
  once $ midicmd "start" # s "midi"
  ;
  d1
    $ foldEvery [2,3] (0.25 ~>)
    $ every 8 ( scramble 4 . rarely (chop 16) . (0.25 <~) )
    $ chunk 4 (slow 2 . sometimes (rev) . sometimes ( (0.25 <~)))
    $ foldEvery [7, 12] (slow 3) $ superimpose (const $ sound "909:6*2")
    $ (#nudge "[0.001 0.01]*4")
    $ foldEvery [2,3,11,7] (often (0.125 <~))
    $ iter 4
    $ n (run 8) #s "[future, midi]" #midichan 0 # gain 1 # orbit 0
  ;
  d2
    $ foldEvery [3,4,11] (sometimes (degradeBy 0.3))
    $ foldEvery [4,5] (sometimes (slow 2))
    $ chunk 8 (sometimes (rev))
    $ (#nudge "[0.005 0.02]*4")
    $ note "0*8"
    # sound "lighter"
    # speed  (0.6 + (0.3/8)*(slow ((irand 7)+1) $ saw))
    # gain (range 0.88 0.6 (slow ((irand 11)+1) $ saw)) # midichan 0 #orbit 1
  ;
  d3
    $ slow 8
    $ note ((scale "hexMajor7" (
      melody
      )) |+ 12)
    #s "[pe-gtr:5,midi]" # gain 1.2 #orbit 2 # midichan 1
  ;
  d4 $ slow 8 $ note (scale "hexMajor7" $ "<[0 [3 5]?] 9 [2 [3 5]?] 5>"+melody) #s "[pe-gtr:9,midi]" #gain 1.2 #midichan 2 #orbit 3
  ;
  d5
    $ slow 8
    $ note ((scale "hexMajor7" (
      (flip mod 12) $ "<[0 -2] 2 [2 1 ] 7>"|-melody
      )) )
    #s "pe-gtr:2" # gain 1.2 # midichan 3 #orbit 4
  ;
}

d1 $ sometimes (chop "16") $ every 9 (brak) $ iter 8 $ n (run 8) #s "[future, midi]" #midichan 0 # gain 1.2 # orbit 0 # crush 2

d1 $ silence

d4
  $ slow 8
  $ note ((scale "hexMajor7" (
    "<[0 [3 5]?] 9 [2 [3 5]?] 5>"+melody
    )) )
    #s "[pe-gtr:9,midi]" # gain 1.2 #midichan 2 #orbit 3 -- #pan "<0 1 1 0.75 0.75 0.5>"

{-END Main idea-}
-- d4
--   $ slow 8
--   $ note ((scale "hexMajor7" (
--     "<[0 [3 5]?] 9 [2 [3 5]?] 5>"+melody
--     )) )
--     #s "[pe-gtr:9,midi]" # gain 1.2 #midichan 2 #orbit 3 -- #pan "<0 1 1 0.75 0.75 0.5>"
{- B section idea #1 -}
hush

d4
  $ sound $ preplace (1,1) "1 ~ 1 [~ 1] 1" "bd bd sn hh hh bd hh bd bd sn sn"

d3
  -- $ runWith 8 (slow 3)
  $ slow 8
  $ up ((scale "hexMajor6" (
    -- off 0.25 (+4)
    -- off 0.125 (slow 3.rev.(+2) )
    "<10 3 9 1> 6(3,8) 3 [5 -2] <[4 3] [2 3]> <4(5,8,3) 0(5,8,3) <4 5>(5,8,3) 1(5,8,3)> <2 5 [2 0] [5 . 4]> ~" )) + 12 - 5)
  #s "[ pe-gtr:5, midi]" #gain 1.2 # midichan 1 #orbit 2
{-END b section idea #1-}



hush

let
    sectionLength = 16
    structure = cat [
      "drums@15 [hats, bass]"
      ,
      "[hats ~ hats@13,~ drums@14, bass]@15 m1"
      ,
      "[drums,hats,m1,m2,bass]"
      ,
      "[drums,hats,m1,m2,bass]"
      ,
      "[drums,hats,m1,m2,bass]"
      ,
      "[drums,hats,m1,m2,bass]@15 [bass,m1,m2]"
      ,
      "[hats ~ hats@13,~ drums@14, bass]@15 [m1,bass,hats]"
      ,
      "[~ drums@15,hats/2 hats@15,bass]@15 bass"
      ,
      "[drums,hats,m1,m2,bass]"
      ,
      "[drums,hats,m1,m2,bass]"
      ,
      "[drums,hats,m1,m2,bass]"
      -- ,
      -- "[drums,hats,m1,m2,bass]"
      -- ,
      -- "[drums,hats,m1,m2,bass]"
      ,
      "[drums,hats@14 hats/2,m1,m2,bass]@14 [hats, ~ m2i ]"
      ,
      "[m1i,m2i]"
      ,
      "[m1i,m2i]"
      ,
      "[m1i]"
      ,
      "[m1i]"
      ]
    patterns = [
      mkpat "drums"
      $ foldEvery [2,3] (0.25 ~>)
      $ every 8 ( scramble 4 . rarely (chop 16) . (0.25 <~) )
      $ chunk 4 (slow 2 . sometimes (rev) . sometimes ( (0.25 <~)))
      $ foldEvery [7, 12] (slow 3) $ superimpose (const $ sound "909:6*2")
      $ (#nudge "[0.001 0.01]*4")
      $ foldEvery [2,3,11,7] (often (0.125 <~))
      $ iter 4
      $ n (run 8) #s "[future, midi]" #midichan 0 # gain 1.2 # orbit 0
      ,
      mkpat "hats"
      $ foldEvery [3,4,11] (sometimes (degradeBy 0.3))
      $ foldEvery [4,5] (sometimes (slow 2))
      $ chunk 8 (sometimes (rev))
      $ (#nudge "[0.005 0.02]*4")
      $ note "0*8"
      # sound "lighter"
      # speed  (0.6 + (0.3/8)*(slow ((irand 7)+1) $ saw))
      # gain (range 0.88 0.6 (slow ((irand 11)+1) $ saw)) # midichan 0 #orbit 1
      ,
      mkpat "m1"
      $ slow 8
      $ note ((scale "hexMajor7" (
        melody
        )) |+ 12)
      #s "[pe-gtr:5,modal03,midi]" # gain 1.2 #orbit 2 # midichan 1
      ,
      mkpat "m1i"
      $ slow 8
      $ up ((scale "hexMajor6" (
        -- off 0.25 (+4)
        -- off 0.125 (slow 3.rev.(+2) )
        "<10 3 9 1> 6(3,8) 3 [5 -2] <[4 3] [2 3]> <4(5,8,3) 0(5,8,3) <4 5>(5,8,3) 1(5,8,3)> <2 5 [2 0] [5 . 4]> ~" )) + 12 - 5)
      #s "[ pe-gtr:5, modal03, midi]" #gain 1.2 # midichan 1 #orbit 2
      ,
      mkpat "m2"
      $ slow 8
      $ note (scale "hexMajor7" $ "<[0 [3 5]?] 9 [2 [3 5]?] 5>"+melody)
      #s "[pe-gtr:9,midi]" #gain 1.2 #midichan 2 #orbit 3
      ,
      mkpat "m2i"
      $ slow 8
      $ note ((scale "hexMajor7" (
        "<[0 [3 5]?] 9 [2 [3 5]?] 5>"+melody
        )) )
        #s "[pe-gtr:9,midi]" # gain 1.2 #midichan 2 #orbit 3
      ,
      mkpat "bass"
      $ slow 8
      $ note ((scale "hexMajor7" (
        (flip mod 12) $ "<[0 -2] 2 [2 1 ] 7>"|-melody
        )) )
      #s "pe-gtr:2" # gain 1.2 # midichan 3 #orbit 4
      ]
    fx = []
    melody =
          off 0.25 (slow 8 . (+ (-6)) )
          $ off 0.125 (slow 4.rev.(+2))
          $ fast 2
          $ cat [
            "[8 .  0(1,8,4) [10 9] ] [[2 [3 0]]] ",
            "[8 .  0(1,8,4) [10 9] ] [[2 1]] " - 3,
            "[8 7 6 [10 9] ] [[8 7]] " +1,
            " [4 [0 -1]] [5 7]"
          ]
    in
    d1 $ ur sectionLength structure patterns fx
    # cps (128/60/2)

hush
