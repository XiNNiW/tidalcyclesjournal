hush

setcps (1)

let melody1 = slow 4
                $ cat [
                  "[ [-1 -2] ~ . -4 . 1 . ~ ]",
                  "[ [-4 0] ~ . 1 . -1 . 0]" ,
                  "[ [0 -4] ~ . -3 . -2 . -1]",
                  "[ ~        . ~ -2 -3 . <0 [0 -1] 0 [2 0 ~*2 ]> . < ~ [1 2] -1 [1 3]> ]"
                ]
    counterMelody1 = slow 4 "<6 [[6 5 3 ~] ~] [6 ~ [4 3]] [6 5 4 3]> [<[5 3 ~*2] [5 3 . ~] 3 5 > <<6 -1 6 0> [6 <5 [5 3] [5 3] [5 3]>]>]"
in
do {
  setcps(1.2);
  d5 $ swingBy (1/5) 10 $ note ( scale "phrygian" $ melody1 ) #s "[midi,pe-gtr:9]" #gain 1.5 #orbit 0 #midichan 0;
  d6 $ swingBy (1/5) 10 $ note ( scale "phrygian" $ counterMelody1 ) #s "midiOP1" #gain 1.5 #orbit 0 #midichan 0;
  d1 $ swingBy (1/5) 10 $ sound "[ <[808bd] bd> 909? ~ ~  . <bd [<[[bd*2? ~ bd bd?] ~] [<bd ~>]> 808bd?]>]" #n (run 8) #orbit 0;
  d2 $ swingBy (1/5) 10 $ every ((irand 5)+1) (const $ sound "~ sd" #orbit 1)  $ sound "[ ~ sd]" #n (run 8) #orbit 0;
  d3 $ swingBy (1/5) 10 $ sound "lighter*8"#n (run 8) # gain  ("[8 .. 10] [9 .. 10]" /10 *0.88) #nudge 0.008 #orbit 0;
}
