hush

let
    foldmod [] _ _ _ p = p
    foldmod timescales d n fx p = foldmod (tail timescales) d n fx $ outside (head timescales) (whenmod d n fx) $ p
in
d1
$ foldmod [1, 6 , 2 ] 9 4 (rot 1 . inside 2 (rev) . slow 2)
$ stack [
  slow 4 $ note (0) #s "opDrm02" #gain 0.9 #octave 2 #pF "brightness" 0.13
  ,
  n ( cat [ "0 [1 3 [3 4 [0*3]]] ","0 1 [0 1 4 [3,0 0 0] . [12] [3,4*2] ]"]) #s "mfb712"
  ,
  n "0*<2 4>@<2 8> 6" #s "TRX"
  ,
  slow 4 $ speed isaw #s "jvbass" # legato 1
  -- ,
  -- note (cat ["~ < 5 7>","~ -1 -3 <4 [4 7*2]>"]) #s "fm01" #gain 1 #octave 4 # pF "brightness" 0.35
  -- ,
  -- jux (slice 16 "0 2 7*3 1 3*6") $ s "xo2(<3 1 2 4>,4,0)" # legato 2 |*| speed "<2 0.5> 1" # note "<0 0 0 [3 [-2 5]]>"
  -- ,
  -- striate "8 16 4 3" $ slice 8 (cat ["<0 0(3,9)> [5 4]","~"])  $ s "ping" #legato 4 #note "<-1 [-1 2 5] [-1 4 [-3 4]]>" #octave 3
  ]


d1 $ stack [
  ghost $ gain ((|/ 10) $ "[9 7] . ~ 9 . ~ . [1 2 3 4 5.9] . 6 7 8 . ~ 9") #s "brute-bd:7"
  ,
  ghost $ gain ((|/ 10) $ "~ ~ [9 ]") # s "brute-sn:14"
  ]
  --
  -- slow "<2 1 [2 1] [1 3 1]>" $ s "brute-bd(<5 <6 [9 3]>>,16,<3 2 1 5>)" #n "[7 3] 4 5 6"
  -- ,
  -- ghost $ slow 2 $ n "~ <14 [14@15 15] 14 [14@3 15]> " # s "brute-sn"
  -- ,

d1 $ stack [
  slow 4 $ note (0) #s "opDrm02" #gain 0.9 #octave 2 #pF "brightness" 0.13
  ,
  slice 16 (cat ["{0 . [2 1] 3 . 8 [4 1] 2}", "0 1", "0 1*8 3 .[ 1@2 1 ]8 2 5", "9 9 9"]) $ loopAt 1 $ s "md-break:4" #unit "c" |* speed 0.5 #legato 2
  -- ,
  -- note (cat ["~ < 5 7>","~ -1 -3 <4 [4 7*2]>"]) #s "fm01" #gain 1 #octave 4 # pF "brightness" 0.35
  -- ,
  -- jux (slice 16 "0 2 7*3 1 3*6") $ s "xo2(<3 1 2 4>,4,0)" # legato 2 |*| speed "<2 0.5> 1" # note "<0 0 0 [3 [-2 5]]>"
  ,
  striate "8 16 4 3" $ slice 8 (cat ["<0 0(3,9)> [5 4]","~"])  $ s "ping" #legato 4 #note "<-1 [-1 2 5] [-1 4 [-3 4]]>" #octave 3
  ]



d1 $ stack [
  slow 4 $ note (0) #s "opDrm02" #gain 0.9 #octave 2 #pF "brightness" 0.13
  ,
  -- every 4 (striate "1 2 [8 32 6 3] 12") $
  slice 32 ( fast 2 $ cat
    [
    "<[0*3 9 0 1][ ~]>"
    ,
    "31*[6@3 16]"
    ,
    "16 9 0 1"
    ,
    "[7 8] 1 9 1"
    ,
    "<[0*3 9 0 1][ 4 4 4 4]>"
    ,
    "7 8 0 1"
    ,
    "16 9 0 1"
    ,
    "0 5 2 4"
    ]) $  loopAt 4 $ s "md-break:6" #legato 1 #unit "c" |* speed 1 # gain 1.2
  -- ,
  -- note (cat ["~ < 5 7>","~ -1 -3 <4 [4 7*2]>"]) #s "fm01" #gain 1 #octave 4 # pF "brightness" 0.35
  ,
  jux (slice 16 "0 2 7*3 1 3*6") $ s "xo2(<3 1 2 4>,4,0)" # legato 2 |*| speed "<2 0.5> 1" # note "<0 0 0 [3 [-2 5]]>"
  ,
  striate "8 16 4 3" $ slice 8 (cat ["<0 0(3,9)> [5 4]","~"])  $ s "ping" #legato 4 #note "<-1 [-1 2 5] [-1 4 [-3 4]]>" #octave 3
  ]

d1 $ slice 8 "[<0*8 0*2> 3*4 2 4] [4 .. 7]" $loopAt 2 $ sound "breaks165" # legato 1 #unit "c"

hush

d1 $ juxBy 0.6 (|* speed "2") $ loopAt "<4 6 2 3>" $ chop 12 $ sound "fm:14"

-- inside 8 (iter 4) $
let paragraph question answer = ur barLength structure pats fx
              where
              antc = question
              cons = answer
              pats = [
                mkpat "a" antc
                ,
                mkpat "b" cons
                ]
              structure = cat [
                "a b"
                ,
                "a b:t1"
                -- ,
                -- "a:t1 b:t2"
                -- ,
                -- "a:t1 <b:t2 b:t1>"
                ]
              fx = [
                mkfx "t1" (iter 4)
                ,
                mkfx "t2" (rev.slow 2.(+ note 5))
                ]
              barLength = 2
    pat1 = stack [
      slow 2 $ note (0) #s "opDrm02" #gain 0.5 #octave 2
      ,
      note (cat ["~ < 5 7>","~ -1 -3 <4 [4 7*2]>"]) #s "fm01" #gain 1 #octave 4
      ,
      jux (slice 16 "0 2 7*3 1 3*6") $ s "xo2(<3 1 2 4>,4,0)" # legato 2 |*| speed "<2 0.5> 1" # note "<0 0 0 [3 [-2 5]]>"
      ,
      striate "8 16 4 3" $ slice 8 (cat ["<0 0(3,9)> [5 4]","~"])  $ s "ping" #legato 4 #note "<-1 [-1 2 5] [-1 4 [-3 4]]>" #octave 3
      ]
in
d1 $ paragraph pat1 pat1
