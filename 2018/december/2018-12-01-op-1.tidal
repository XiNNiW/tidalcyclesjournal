
do
cps (128/60/2)
p "clock" $ midicmd "midiClock*48" # s "[midi]" --midiOP1

d9 $ midicmd "stop" # s "midi"

d9 $ midicmd "start" # s "midi"

hush

melody = (slow 6 $ "<0 0 -1 0> 2 [3 <6 5 4 8> .] [3 4 3] <8 7 8 7> 4 <10 9 10 ~>")

inversion = (* (-1))

d1 $ note ((scale "hexDorian" melody)) #s "pe-gtr:9" #midichan 0


d1 $ note
((scale "hexDorian"
  $ off 1 ((+ 2).inversion.slow 2)
  -- $ off 3 ((+ 7))
  $ melody + (slow 2 $ melody * (-1))
)) #s "pe-gtr:9" #midichan 0

d1 $ note
((scale "minor"
  $ off 1 ((+ 6).inversion.slow 2)
  $ off 3 ((+ 4))
  $ melody
)) #s "pe-gtr:9" #midichan 0

d1 $ note
((scale "hexDorian"
  $ off 1 ((+ 6).inversion.slow 2)
  $ off 3 ((+ 3))
  $ melody
)) #s "pe-gtr:9" #midichan 0

d1 $ note
((scale "minor"
  -- $ off 1 ((+ 8).inversion)
  $ off 3 ((+ 1))
  $ melody
)) #s "pe-gtr:9" #midichan 0

d1 $ note ((scale "minor" $ slow 2 $ "2 0 . ~ 0 3"+melody-3)) #s "pe-gtr:9" #midichan 0





-- generateMelodicSeed = slow 4
--   $ repeatCycles 3
--   $ palindrome
--   $ linger 0.5
--   $ (+ ( (irand 4) - 2))
--   $ (+ (slow 4 (run 5)))
--   $ slow ((irand 3) + 1)
--   $ "<[[x ~ x x ]*2]  [[x x x]*2] >"<~>(irand 5)

-- hush
--
--
-- getNow >>= \now ->
-- d9 $ seqP [
--   (0,1, silence),
--   (1,2, midicmd "start" #s "midiOP1"),
--   (2,600, midicmd "midiClock*48" #s "midiOP1")
-- ]
