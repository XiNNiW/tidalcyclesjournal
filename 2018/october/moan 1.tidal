d2
  $ foldEvery [6,8] (iter 4)
  $ every 2 (|+|n (run 8))
  $ stack [
    sound (fit 4 ["bd", "sn:3", "sn", "mt", "bd"] "0 1 ~ [2 3]"),
    every 4 (degradeBy 0.5) $ sound "bd:3*2"
  ]

hush

d2
  $ foldEvery [6,8] (iter 4)
  $ every 2 (|+|n (run 8))
  $ stack [
    sound (fit 4 ["bd", "sn:3", "sn", "mt", "bd"] "0 1 ~ [2 3]"),
    every 4 (degradeBy 0.5) $ sound "{bd:3*2}%2"
  ]

d2
  $ foldEvery [6,8] (iter 4)
  $ every 4 (superimpose ((#gain 0.88).rev.brak.(|+| up 5).(#n (run 8)).striate 2.(0.25 ~>)))
  $ every 2 (|+|n (run 8))
  -- $ (|+| gain "1 1 0.9 0.88 0.9 1 0.88 0.88")
  $ stack [
    sound (fit 4 ["808bd", "sn:3", "sn", "mt", "909"] "0 1 ~ [2 3]"),
    every 4 (degradeBy 0.5) $ sound "{bd:3*2}%1" #orbit 0
  ]

d2
  $ foldEvery [6,8] (iter 4)
  $ every 4 (superimpose ((#gain 0.88).rev.brak.(|+| up 5).(#n (run 8)).striate 2.(0.25 ~>)))
  $ every 2 (|+|n (run 8))
  -- $ (|+| gain "1 1 0.9 0.88 0.9 1 0.88 0.88")
  $ stack [
    sound (fit 4 ["808bd", "sn:3", "sn", "mt", "909"] "0 1 ~ [2 3]"),
    every 4 (degradeBy 0.5) $ sound "{bd:3*2}%1" #orbit 0
    -- sound "odx:12*8" # gain (scalex 0.9 0.125 $ slow 2 $ sinewave1)
  ]


do
d2
  $ foldEvery [6,8] (iter 4)
  $ every 4 (superimpose ((#gain 0.88).rev.brak.(|+| up 5).(#n (run 8)).striate 2.(0.25 ~>)))
  $ every 2 (|+|n (run 8))
  -- $ (|+| gain "1 1 0.9 0.88 0.9 1 0.88 0.88")
  $ stack [
    sound (fit 4 ["808bd", "sn:3", "sn", "mt", "909"] "0 1 ~ [2 3]"),
    every 4 (degradeBy 0.5) $ sound "{bd:3*2}%1" #orbit 0,
    sound "odx:12*8" # gain (rangex 0.9 0.125 $ slow 2 $ sine)
  ]
d3
  $ superimpose (slow "3 4 2 4" . rev .(|*| speed 0.5))
  $ within (0.5,1) (slow 4. rev)
  $ iter 4
  $ up (scale "harmonicMinor" (run 8 + "<0 2 3 4 5>")) #s "ATC-1:3" # gain 0.8 |*| speed 2
  -- # room 0.7 # size 4 # orbit 0

d1
  $ striate 16 $ slow 4 $ sound "moan" # n (slow 8 $ run 8)
  -- |+| room 0.7 |+| size 4


hush



-- ============================================================================================================== --


d3 $ slow 4 $ (fit' 1 4 (irand 4) "~ [0 ~] 1 [3 2]" ) $ up (scaleP "harmonicMinor" "{<0 3 5 9 5, 2 4 7 11 8, 0 7 9 3>}%4") #s "arpy"
